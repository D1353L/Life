#include <SFML/Graphics.hpp>

struct cell
{
	bool alive;
	bool nextAlive;
};

class LIFE
{
private:
	cell **Field; //двумерный массив ячеек

	int rows; //строки

	int cols; //столбцы

	int cellSizeX; //размер ячеек x

	int cellSizeY; //размер ячеек y

	int GetIndex(int index, int size); //замыкание массива(определяет индексы ячеек, выходящих за рамки массива)

	int Sum(int x, int y); //сумма живих ячеек-соседей

public:
	LIFE(); //конструктор по умолчанию

	LIFE(int windowsizex, int windowsizey, int _cellSizeX, int _cellSizeY, int _cellOutlineThickness); //конструктор с параметрами

	LIFE(const LIFE &copy_object); //конструктор копирования

	~LIFE(void); //деструктор

	void Set(char *mode); //начальное заполнение

	void GenChange(); //смена поколения

	//void Update(int windowsizex, int windowsizey); //изменение количества ячеек

	//void Update(int windowsizex, int windowsizey, int _cellSizeX, int _cellSizeY, int _cellOutlineThickness); //изменение параметров поля

	void Output(sf::RenderWindow & window, sf::RectangleShape & rectangle); //вывод

	int getrows(); //возвращает количество строк
	
	int getcols(); //возвращает количество столбцов
};